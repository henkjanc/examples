{
  "paragraphs": [
    {
      "text": "%md ##Capture Tweets from the Twitter\u0027s Stream\nThis is the first notebook and doesn\u0027t show data, it connects to the stream and publish a table to be consumed by the [Realtime Dashboard Notebook](http://localhost:8080/#/notebook/2AXWE6MRR).\n\nIn order to run this sample, you\u0027ll need to have Twitter\u0027s application credentials, you must create your own at [http://apps.twitter.com](http://apps.twitter.com)",
      "dateUpdated": "Aug 22, 2015 8:36:43 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1439781294955_-1169043710",
      "id": "20150817-031454_2024478955",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch2\u003eCapture Tweets from the Twitter\u0027s Stream\u003c/h2\u003e\n\u003cp\u003eThis is the first notebook and doesn\u0027t show data, it connects to the stream and publish a table to be consumed by the \u003ca href\u003d\"http://localhost:8080/#/notebook/2AXWE6MRR\"\u003eRealtime Dashboard Notebook\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eIn order to run this sample, you\u0027ll need to have Twitter\u0027s application credentials, you must create your own at \u003ca href\u003d\"http://apps.twitter.com\"\u003ehttp://apps.twitter.com\u003c/a\u003e\u003c/p\u003e\n"
      },
      "dateCreated": "Aug 17, 2015 3:14:54 AM",
      "dateStarted": "Aug 22, 2015 8:10:26 PM",
      "dateFinished": "Aug 22, 2015 8:10:26 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// Configure Twitter credentials\nval apiKey \u003d z.input(\"apiKey\").toString\nval apiSecret \u003d z.input(\"apiSecret\").toString\nval accessToken \u003d z.input(\"accessToken\").toString\nval accessTokenSecret \u003d  z.input(\"accessTokenSecret\").toString",
      "dateUpdated": "Aug 22, 2015 8:36:53 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {
          "apiKey": "",
          "apiSecret": "",
          "accessToken": "",
          "accessTokenSecret": ""
        },
        "forms": {
          "apiKey": {
            "name": "apiKey",
            "displayName": "apiKey",
            "defaultValue": "",
            "hidden": false
          },
          "apiSecret": {
            "name": "apiSecret",
            "displayName": "apiSecret",
            "defaultValue": "",
            "hidden": false
          },
          "accessToken": {
            "name": "accessToken",
            "displayName": "accessToken",
            "defaultValue": "",
            "hidden": false
          },
          "accessTokenSecret": {
            "name": "accessTokenSecret",
            "displayName": "accessTokenSecret",
            "defaultValue": "",
            "hidden": false
          }
        }
      },
      "jobName": "paragraph_1439786041592_-1016311029",
      "id": "20150817-043401_1313592410",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "apiKey: String \u003d \"\"\napiSecret: String \u003d \"\"\naccessToken: String \u003d \"\"\naccessTokenSecret: String \u003d \"\"\n"
      },
      "dateCreated": "Aug 17, 2015 4:34:01 AM",
      "dateStarted": "Aug 22, 2015 8:37:03 PM",
      "dateFinished": "Aug 22, 2015 8:37:04 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "import org.apache.spark.streaming._\nimport org.apache.spark.streaming.twitter._\nimport org.apache.spark.storage.StorageLevel\nimport scala.io.Source\nimport scala.collection.mutable.HashMap\nimport java.io.File\nimport org.apache.log4j.Logger\nimport org.apache.log4j.Level\nimport scala.sys.process.stringSeqToProcess\n\n\n/** Configures the Oauth Credentials for accessing Twitter */\ndef configureTwitterCredentials(apiKey: String, apiSecret: String, accessToken: String, accessTokenSecret: String) {\n  val configs \u003d new HashMap[String, String] ++\u003d Seq(\n    \"apiKey\" -\u003e apiKey, \"apiSecret\" -\u003e apiSecret, \"accessToken\" -\u003e accessToken, \"accessTokenSecret\" -\u003e accessTokenSecret)\n  println(\"Configuring Twitter OAuth\")\n  configs.foreach{ case(key, value) \u003d\u003e\n    if (value.trim.isEmpty) {\n      throw new Exception(\"Error setting authentication - value for \" + key + \" not set\")\n    }\n    val fullKey \u003d \"twitter4j.oauth.\" + key.replace(\"api\", \"consumer\")\n    System.setProperty(fullKey, value.trim)\n    println(\"\\tProperty \" + fullKey + \" set as [\" + value.trim + \"]\")\n  }\n  println()\n}\n\nconfigureTwitterCredentials(apiKey, apiSecret, accessToken, accessTokenSecret)\n\n\nimport org.apache.spark.streaming.twitter._\nval ssc \u003d new StreamingContext(sc, Seconds(2))\nval tweets \u003d TwitterUtils.createStream(ssc, None)\nval twt \u003d tweets.window(Seconds(60))\n\ncase class Tweet(createdAt:Long, text:String, screenName:String\u003d\"\")\ntwt.map(status\u003d\u003e\n  Tweet(status.getCreatedAt().getTime()/1000, status.getText(), status.getUser().getScreenName())\n).foreachRDD(rdd\u003d\u003e\n  rdd.toDF.registerTempTable(\"tweets\")\n)\n\n// twt.print\n\nssc.start()\n// ssc.awaitTermination()\n",
      "dateUpdated": "Aug 22, 2015 8:36:43 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "editorHide": true
      },
      "settings": {
        "params": {
          "apiKey": "D8Bg9mEv2owSym6LqdWajzbSh",
          "apiSecret": "AaqRKn4aR80dCEzAcQ7624PCKJc7tOrsUNv04Msu5NZvAxBOkI",
          "accessToken": "15092087-LqIZAMTqAu6Ez9r0yK8y6jFGiAjgqvriSL3r7GwGD",
          "accessTokenSecret": "GyutOX0aOzjdp9XTyIP4Gpyv40O7eCe2cj495dGhrdgsN"
        },
        "forms": {}
      },
      "jobName": "paragraph_1439781330622_-517233100",
      "id": "20150817-031530_1030500408",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import org.apache.spark.streaming._\nimport org.apache.spark.streaming.twitter._\nimport org.apache.spark.storage.StorageLevel\nimport scala.io.Source\nimport scala.collection.mutable.HashMap\nimport java.io.File\nimport org.apache.log4j.Logger\nimport org.apache.log4j.Level\nimport scala.sys.process.stringSeqToProcess\nconfigureTwitterCredentials: (apiKey: String, apiSecret: String, accessToken: String, accessTokenSecret: String)Unit\nConfiguring Twitter OAuth\n\tProperty twitter4j.oauth.consumerKey set as [D8Bg9mEv2owSym6LqdWajzbSh]\n\tProperty twitter4j.oauth.accessToken set as [15092087-LqIZAMTqAu6Ez9r0yK8y6jFGiAjgqvriSL3r7GwGD]\n\tProperty twitter4j.oauth.consumerSecret set as [AaqRKn4aR80dCEzAcQ7624PCKJc7tOrsUNv04Msu5NZvAxBOkI]\n\tProperty twitter4j.oauth.accessTokenSecret set as [GyutOX0aOzjdp9XTyIP4Gpyv40O7eCe2cj495dGhrdgsN]\n\nimport org.apache.spark.streaming.twitter._\nssc: org.apache.spark.streaming.StreamingContext \u003d org.apache.spark.streaming.StreamingContext@24b04368\ntweets: org.apache.spark.streaming.dstream.ReceiverInputDStream[twitter4j.Status] \u003d org.apache.spark.streaming.twitter.TwitterInputDStream@64daa9d3\ntwt: org.apache.spark.streaming.dstream.DStream[twitter4j.Status] \u003d org.apache.spark.streaming.dstream.WindowedDStream@1a73a8ec\ndefined class Tweet\n"
      },
      "dateCreated": "Aug 17, 2015 3:15:30 AM",
      "dateStarted": "Aug 22, 2015 8:10:26 PM",
      "dateFinished": "Aug 22, 2015 8:10:36 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n##[Go and Check the Dashboard Notebook](http://localhost:8080/#/notebook/2AXWE6MRR)",
      "dateUpdated": "Aug 22, 2015 8:36:43 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1439783331116_-644335987",
      "id": "20150817-034851_1670767587",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch2\u003e\u003ca href\u003d\"http://localhost:8080/#/notebook/2AXWE6MRR\"\u003eGo and Check the Dashboard Notebook\u003c/a\u003e\u003c/h2\u003e\n"
      },
      "dateCreated": "Aug 17, 2015 3:48:51 AM",
      "dateStarted": "Aug 22, 2015 8:10:26 PM",
      "dateFinished": "Aug 22, 2015 8:10:26 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "dateUpdated": "Aug 22, 2015 8:36:43 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1440274190403_1393170",
      "id": "20150822-200950_811085332",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT"
      },
      "dateCreated": "Aug 22, 2015 8:09:50 PM",
      "dateStarted": "Aug 22, 2015 8:10:28 PM",
      "dateFinished": "Aug 22, 2015 8:10:36 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Consuming Tweets in Realtime with Spark Streaming",
  "id": "2AVRDV5AZ",
  "angularObjects": {
    "2AW9XG87T": [],
    "2AYFF1FBK": [],
    "2AVKD7B62": [],
    "2AUZT3WKD": [],
    "2AV7D2YDP": [],
    "2AXRFPPT4": [],
    "2AV9EFM3M": [],
    "2AVTG1HU3": [],
    "2AVJ6KFYN": [],
    "2AV4ZJ7GG": [],
    "2AWDJ3UKM": [],
    "2AVNKY1DA": []
  },
  "config": {
    "looknfeel": "default"
  },
  "info": {}
}